# name of your application, e.g. your domain name
name: tjtimer.dev
#
# Set replica to the number of app instances
# that should be running.
# Each instance will run in its own process.
# Should not be more than number of available cores.
replica: 2

# use 'on' or 'true' to enable, 'off' or 'false' to disable
debug: on
# ssl can be either 'on'/'true', 'off'/'false' or a list of supported
# SSL/TLS versions
# By default it uses TLSv1
ssl: on
auth: off

root_dir: /var/www/tjtimer.dev
#
# assuming this directory structure
# <root_dir>/
#     public/
#         static/     -> having your css and javascript files and
#         media/      -> having uploaded media like pictures, music or video files
#     application/
#         apps/       -> having your apps / services / request handlers
#         conf/       -> having this and other config files
#         templates/  -> having your jinja2 templates
#         .tmp/       -> having temporary files
#         .secrets/   -> having your secrets files like database passwords
#         .certs/     -> having your certificates, private and public keys
#         .scks/      -> having your app sockets
#
# none of the following has to be given.
# Given directory names beginning with a '/'
# are are treated like absolute paths.
#
# public_root: public/
# application_root: application/
# apps_dir: apps/  # this must be placed under application_root
# templates_dir: templates/
# media_dir: media/
# static_dir: static/
# conf_dir: conf/
# temp_dir: .tmp/
# sockets_dir: .scks/
# secrets_dir: .secrets/
# certificates_dir: .certs/
#

#
# logging configuration
# if your logging configuration is in a json or yaml file
# set logging_config to the filename or path.
# if type is 'ini' than a path or filename has to be given
# if type is 'listen' a port must be given.
# see examples below and read the python docs at
# https://docs.python.org/3/library/logging.config.html
#
logging_config: logging.conf.yaml
#
# logging_config:
#   type: listen
#   port: 123456
#
# logging_config:
#   type: ini
#   path: /path/to/mylogging.conf.ini
#
#
# local_conf can be used to overwrite settings
# from this file for example for development purposes
# or to add other settings not nested like those in
# the 'includes' section.
#
local_config:  local.conf.yaml
#
# additional config files can be placed
# under 'includes' like this:
# includes:
#   - app1.conf.yaml
#   - app2.yaml
#   - /path/to/another/Application.conf.json
#
# The first part of the filename will be used
# as the key (all lower case) to be set at
# the config dict of the root app
# where the value will be the configuration also
# as a dict.
# for example
# a configuration in a file called superapp.conf.yaml
# will be found at root['config']['superapp'].

# set your desired jinja2 template loader
# can be set to 'system' or 'package'
# or 'of'/'false' to not use the jinja2 template engine.
# default is 'system'
#
# template_loader: system  # system or package

# Following settings are examples only and
# could also be placed in a local or
# additional config file.
#
# debug_env: <my-machine>
#
# databases:
#   postgresql:
#     name: db-name
#     user: db-user
#     port: postresql-port
#     password: super-secure
#   orientdb:
#     name: db-name
#     user: db-user
#     port: orientdb-port
#     password: evenMoreSecure!
# 
# email:
#   server:
#     host: localhost
#     port: 3030
#   smtp:
#     host: smtp.noodlemail.com
#     port: 465
#   imap:
#     host: imap.nanoo.com
#     port: 993
#   pop3:
#     host: pop3.nimx.net
#     port: 995
#
